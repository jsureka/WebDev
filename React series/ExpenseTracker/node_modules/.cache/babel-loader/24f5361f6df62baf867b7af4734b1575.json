{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jitesh\\\\Desktop\\\\WebDev\\\\React series\\\\ExpenseTracker\\\\src\\\\components\\\\Chart.js\";\nimport React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(datapoint => datapoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(datapoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: datapoint.value,\n      maxValue: totalMaximum,\n      label: datapoint.label\n    }, datapoint.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/jitesh/Desktop/WebDev/React series/ExpenseTracker/src/components/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValues","dataPoints","map","datapoint","value","totalMaximum","Math","max","label","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAIA,SAAS,CAACC,KAA5C,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AACF,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBC,SAAD,iBACpB,QAAC,QAAD;AAEE,MAAA,KAAK,EAAEA,SAAS,CAACC,KAFnB;AAGE,MAAA,QAAQ,EAAEC,YAHZ;AAIE,MAAA,KAAK,EAAEF,SAAS,CAACK;AAJnB,OACOL,SAAS,CAACM,EADjB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;KAAMX,K;AAiBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(datapoint => datapoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((datapoint) => (\r\n        <ChartBar\r\n          key={datapoint.id}\r\n          value={datapoint.value}\r\n          maxValue={totalMaximum}\r\n          label={datapoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}